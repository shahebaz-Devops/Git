# mkdir github-for-devops-workshop  
# git init                (Create a new Git repository)
# git status              (Check the status of the repository)

Git has three stages of workflow -1. Working aria 2. Staging aria 3. Local Repository.
We send data or code from working aria to staging aria by add command and staging aria to Local repository by 
commit command and finally send data/code from Local repo to central repo by push command.

untracked :- if file is in file system so it is utracked for vcs like git 
staged :- when file is added to staged when code is completed
tracked :- when file is moved from staging to tracked then its tracked for git

# git add <filename>  (Add a file to the staging area:)
# git rm --cached <file>   (to unstaged)
# git add .          (to stage all files at once)
# git commit -m "added testing file" (Commit changes with a message)

now delete the testing.py file and you can also recover it in git

# rm testing.py
# git restore testing.py

If want to send this code to my central repository, I have to connect local repo to central repo first, for this action I 
have to create a new repository (any name) and paste the URL of git repo and execute command as given below 
[Mumbaigit] # git remote add origin https://github.com/zshan227/centralgit2.git

# git remote add origin https://github.com/shahebaz-Devops/git-repository-for-practice.git
# git remote -v (to check we connect or not to github URL)

# git remote set-url origin https://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@github.com/shahebaz-Devops/git-repository-for-practice.git   (to set the url)
# git push origin master

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 (PAT)

# git clone https://github.com/shahebaz-Devops/git-repository-for-practice.git      (to clone repo from central to local repo)
# git pull origin master    (to pull the changes from github to local)

Branching in Git:-

# git branch         (to check the branches available)
# git branch dev      (to create a branch)
# git switch dev / # git checkout dev
# vi dev.txt
# git status

new token

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

# git add dev.txt
# git commit -m "dev file"
# git log
# git log --oneline
# git push origin dev
HEAD is a latest commit

Pull request is way to merge one branch with another on github

# git fetch    (to fetch remote branches to our local)
# git pull    (to add remote changes to update on our branch at local)
----------------------------------------------------------------------------

> Git Hook

Using git hooks we can apply check before or afetr commiting the code,
for example if we define that if there is any syntax issue with the code so it should not be commited.

git hooks = pre-commit hook

----------------------------------------------------------------------------

Porject :- Deploy a static website using GithubAction

once we run the code using github action so code will goto s3 bucket and website will be publicly accesible.

First an IAM user and attached it admin level policy
create access key and secret key for the user
on git hub fork the shubham londhe repo where the code is available
once the repo is forked goto main.yml file and now goto github setting > secret and variable > action > create new repo > 
repo name "AWS_ACCESS_KEY_ID" and value is "our aws access id" then create > create new repo > 
repo name "AWS_SECRET_ACCESS_KEY" value is "our aws secret access key" then create
create one s3 public bucket and name it as tws-junoon-shahebaz to make is publick create a policy for s3 getobject action and apply
now goto s3 static website option and enable it keep filename as index.html and error.html
now in main.yml file define you bucket name like "tws-junoon-shahebaz"
